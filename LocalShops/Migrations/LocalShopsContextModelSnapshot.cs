// <auto-generated />
using LocalShops.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace LocalShops.Migrations
{
    [DbContext(typeof(LocalShopsContext))]
    partial class LocalShopsContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.4-servicing-10062")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("LocalShops.Models.Neighborhood", b =>
                {
                    b.Property<int>("NeighborhoodId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name");

                    b.HasKey("NeighborhoodId");

                    b.ToTable("Neighborhoods");

                    b.HasData(
                        new
                        {
                            NeighborhoodId = 1,
                            Name = "Eastmorland"
                        },
                        new
                        {
                            NeighborhoodId = 2,
                            Name = "Sellwood"
                        },
                        new
                        {
                            NeighborhoodId = 3,
                            Name = "Woodstock"
                        });
                });

            modelBuilder.Entity("LocalShops.Models.Restaurant", b =>
                {
                    b.Property<int>("RestaurantId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name");

                    b.Property<int>("NeighborhoodId");

                    b.Property<int>("StarRating");

                    b.Property<string>("Type");

                    b.HasKey("RestaurantId");

                    b.HasIndex("NeighborhoodId");

                    b.ToTable("Restaurants");

                    b.HasData(
                        new
                        {
                            RestaurantId = 1,
                            Name = "Taco Express",
                            NeighborhoodId = 1,
                            StarRating = 3,
                            Type = "Mexican"
                        },
                        new
                        {
                            RestaurantId = 2,
                            Name = "Betrie Lou's Cafe",
                            NeighborhoodId = 2,
                            StarRating = 3,
                            Type = " American breakfast/lunch"
                        },
                        new
                        {
                            RestaurantId = 3,
                            Name = "Bellagios Pizza",
                            NeighborhoodId = 2,
                            StarRating = 4,
                            Type = "Italian"
                        },
                        new
                        {
                            RestaurantId = 4,
                            Name = "Otto's",
                            NeighborhoodId = 3,
                            StarRating = 5,
                            Type = "German deli"
                        },
                        new
                        {
                            RestaurantId = 5,
                            Name = "Tom Yum",
                            NeighborhoodId = 3,
                            StarRating = 5,
                            Type = "Thai"
                        },
                        new
                        {
                            RestaurantId = 6,
                            Name = "Laughing Planet",
                            NeighborhoodId = 3,
                            StarRating = 3,
                            Type = "burritos/bowls"
                        });
                });

            modelBuilder.Entity("LocalShops.Models.Shop", b =>
                {
                    b.Property<int>("ShopId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name");

                    b.Property<int>("NeighborhoodId");

                    b.Property<int>("StarRating");

                    b.Property<string>("Type");

                    b.HasKey("ShopId");

                    b.HasIndex("NeighborhoodId");

                    b.ToTable("Shops");

                    b.HasData(
                        new
                        {
                            ShopId = 1,
                            Name = "Wallgreens",
                            NeighborhoodId = 1,
                            StarRating = 2,
                            Type = "drug store"
                        },
                        new
                        {
                            ShopId = 2,
                            Name = "7/11",
                            NeighborhoodId = 1,
                            StarRating = 2,
                            Type = "convenience"
                        },
                        new
                        {
                            ShopId = 3,
                            Name = "Snap Fitness",
                            NeighborhoodId = 2,
                            StarRating = 4,
                            Type = "gym/wellness"
                        },
                        new
                        {
                            ShopId = 4,
                            Name = "Ace Hardware",
                            NeighborhoodId = 3,
                            StarRating = 3,
                            Type = "hardware store"
                        },
                        new
                        {
                            ShopId = 5,
                            Name = "7/11",
                            NeighborhoodId = 3,
                            StarRating = 3,
                            Type = "convenience store"
                        },
                        new
                        {
                            ShopId = 6,
                            Name = "New Seasons",
                            NeighborhoodId = 3,
                            StarRating = 5,
                            Type = "grocery store"
                        });
                });

            modelBuilder.Entity("LocalShops.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Password");

                    b.Property<string>("Role");

                    b.Property<string>("Token");

                    b.Property<string>("Username");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Password = "noel",
                            Role = "Admin",
                            Username = "noel"
                        },
                        new
                        {
                            Id = 2,
                            Password = "user",
                            Role = "User",
                            Username = "user"
                        });
                });

            modelBuilder.Entity("LocalShops.Models.Restaurant", b =>
                {
                    b.HasOne("LocalShops.Models.Neighborhood")
                        .WithMany("Restaurants")
                        .HasForeignKey("NeighborhoodId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("LocalShops.Models.Shop", b =>
                {
                    b.HasOne("LocalShops.Models.Neighborhood")
                        .WithMany("Shops")
                        .HasForeignKey("NeighborhoodId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
